/*
Title- 1. Write a C Program to Transpose a matrix.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/
#include<stdio.h>
#include<stdlib.h>
void main()
{
    int** p=NULL;
    int r,c,i,j;
    printf("Enter no. of rows you want in matrix: ");
    scanf("%d",&r);
    printf("Enter no. of columns you want in matrix: ");
    scanf("%d",&c);
    p=(int**)malloc(r*sizeof(int*));
    for(i=0;i<r;i++)
    {
        *(p+i)=(int*)malloc(c*sizeof(int));
    }
    printf("Enter elements in the matrix: \n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",(*(p+i)+j));
        }
    }
    printf("Original matrix is: \n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",(*(*(p+i)+j)));
        }
        printf("\n");
    }
    printf("Transformed matrix is: \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
            printf("%d\t",(*(*(p+j)+i)));
        }
        printf("\n");
    }
    free(p);
    p=NULL;
}






/*
Title- 2. Write a C program to print diagonal elements in
matrix.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/

#include<stdio.h>
#include<stdlib.h>

void main()
{
    int** p=NULL;
    int r,c,i,j;
    printf("enter no. of rows you want in matrix: ");
    scanf("%d",&r);
    printf("Enter how many columns you want in matrix: ");
    scanf("%d",&c);
    p=(int**)malloc(r*sizeof(int*));
    for(i=0;i<r;i++)
    {
        *(p+i)=(int*)malloc(c*sizeof(int));
    }
    printf("enter the elements in matrix: \n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",(*(p+i)+j));
        }
    }
    printf("Diagobal elements are: [");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(j==i)
            {
                printf("%d, ",*(*(p+i)+j));
            }
        }
    }
    printf("]\n");
    free(p);
    p=NULL;
}







/*
Title- 3. Write a C program to find out a multiplication
matrix.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/


#include<stdio.h>
#include<stdlib.h>

void main()
{
    int **p=NULL, **q=NULL, **r=NULL;
    int i,j,r1,c1,r2,c2,k;
    printf("enter no. of rows you want to enter into the array1: ");
    scanf("%d",&r1);
    printf("enter no. of columns you want to enter into the array1: ");
    scanf("%d",&c1);
    printf("enter no. of rows you want to enter into the array2: ");
    scanf("%d",&r2);
    printf("enter no. of columns you want to enter into the array2: ");
    scanf("%d",&c2);
    if(c1==r2)
    {
        
//         ----creating matrix 1 and adding elements in it ----
        p=(int**)malloc(r1*sizeof(int*));
        for(i=0;i<r1;i++)
        {
            *(p+i)=(int*)malloc(c1*sizeof(int));
        }
        printf("Enter the elements in the array1: \n");
        for(i=0;i<r1;i++)
        {
            for(j=0;j<c1;j++)
            {
                scanf("%d",(*(p+i)+j));
            }
        }
//     --------- creating matrix 2 and adding elements in it ----
         q=(int**)malloc(r2*sizeof(int*));
        for(i=0;i<r2;i++)
        {
            *(q+i)=(int*)malloc(c2*sizeof(int));
        }
        printf("Enter the elements in the array2: \n");
        for(i=0;i<r2;i++)
        {
            for(j=0;j<c2;j++)
            {
                scanf("%d",(*(q+i)+j));
            }
        }
//       -----  creating matrix 3 to store multiplication of 2 matrices -----
        r=(int**)malloc(r1*sizeof(int*));
        for(i=0;i<r1;i++)
        {
            *(r+i)=(int*)calloc(sizeof(int),c2);
        }
        for(i=0;i<r1;i++)
        {
            for(j=0;j<c2;j++)
            {
                for(k=0;k<c1;k++)
                {
                    (*(*(r+i)+j))+=(*(*(p+i)+k)) * (*(*(q+k)+j));
                }
            }
        }
        printf("Multiplication matrix is: \n");
        for(i=0;i<r1;i++)
        {
            for(j=0;j<c2;j++)
            {
                printf("%d\t",*(*(r+i)+j));
            }
            printf("\n");
        }
        free(p);
        free(q);
        free(r);
        p=q=r=NULL;
        
    }
    else
    {
        printf("Please enter proper matrix sizes....\n");
    }
    
    
}






/*
Title- 4. Write a C program to check whether matrix is unit
matrix or not.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/

#include<stdio.h>
#include<stdlib.h>

void main()
{
    int** p=NULL;
    int i,j,rc,flag=0;
    printf("HOW many rows and colums you want in matrix: ");
    scanf("%d",&rc);
    p=(int**)malloc(rc*sizeof(int*));
    for(i=0;i<rc;i++)
    {
        *(p+i)=(int*)malloc(rc*sizeof(int));
    }
    printf("Enter elements in matrix: \n");
    for(i=0;i<rc;i++)
    {
        for(j=0;j<rc;j++)
        {
            scanf("%d",(*(p+i)+j));
        }
    }
    for(i=0;i<rc;i++)
    {
        for(j=0;j<rc;j++)
        {
            if(i==j)
            {
                if(*(*(p+i)+j)!=1)
                {
                    flag=1;
                    break;
                }
            }
            else
            {
                if(*(*(p+i)+j)!=0)
                {
                    flag=1;
                    break;
                }
            }
        }
        if(flag==1)
        {
            break;
        }
    }
    if(flag==1)
    {
        printf("Matrix is not a unit matrix...\n");
    }
    else
    {
        printf("Matrix is a unit matrix...\n");
    }
    free(p);
    p=NULL;
}






/*
Title- 5. Write a C program to check whether matrix is upper
triangular matrix or not.
memory allocation.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/


#include<stdio.h>
#include<stdlib.h>

void main()
{
    int** p=NULL;
    int r,c,i,j,flag=0;
    printf("Enter the no. of rows you want: ");
    scanf("%d",&r);
    printf("Enter the no. of columns you want: ");
    scanf("%d",&c);
    p=(int**)malloc(r*sizeof(int*));
    for(i=0;i<r;i++)
    {
        *(p+i)=(int*)malloc(c*sizeof(int));
    }
    printf("Enter matrix elements: \n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",(*(p+i)+j));
        }
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(j<i)
            {
                if(*(*(p+i)+j)!=0)
                {
                    flag=1;
                    break;
                }
            }
        }
        if(flag==1)
        {
            break;
        }
    }
    if(flag==1)
    {
        printf("matrix is not upper triangular..\n");
    }
    else
    {
        printf("Matrix is upper Triangular...\n");
    }
    free(p);
    p=NULL;
}




/*
Title- 6. Write a C program to print 3X3 matrix of strings.
Author- Bhakare Mahesh Santosh
ID- 492
Batch- TechnOrbit(PPA-8)
*/


#include<stdio.h>
#include<stdlib.h>
void main()
{
    char*** p=NULL;
    int i,j,len;
    char ch;
    p=(char***)malloc(r*sizeof(char*));
    for(i=0;i<3;i++)
    {
        *(p+i)=(char**)malloc(c*sizeof(char*));
    }
    printf("Enter the strings: \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            *(*(p+i)+j)=(char*)malloc(sizeof(char));
            *(*(*(p+i)+j)+0)='\0';
            len=1;
            scanf(" ");
            do
            {
                scanf("%c",&ch);
                if(ch!='\n')
                {
                    len++;
                    *(*(p+i)+j)=(char*)realloc(*(*(p+i)+j),len+sizeof(char));
                    *(*(*(p+i)+j)+(len-2))=ch;
                    *(*(*(p+i)+j)+(len-1))='\0';
                }
            }while(ch!='\n');
        }
    }
    printf("Entered matrix of strings is: \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%s\t",(*(*(p+i)+j)));
        }
        printf("\n");
    }
    free(p);
    p=NULL;
}
 
